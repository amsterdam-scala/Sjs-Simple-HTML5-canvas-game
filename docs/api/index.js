Index.PACKAGES = {"nl" : [], "nl.amsscala" : [], "nl.amsscala.simplegame" : [{"name" : "nl.amsscala.simplegame.CanvasComponent", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CanvasComponent[Numeric]) ⇒ Boolean, msg: ⇒ Any): CanvasComponent[Numeric]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CanvasComponent[Numeric]) ⇒ Boolean): CanvasComponent[Numeric]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): CanvasComponent[Numeric]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CanvasComponent[Numeric]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CanvasComponent[Numeric], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CanvasComponent[Numeric], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "nl.amsscala.simplegame.CanvasComponent.equals", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "nl.amsscala.simplegame.CanvasComponent.toString", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "src", "tail" : "(): String", "member" : "nl.amsscala.simplegame.CanvasComponent.src", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#src:String", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(img: HTMLImageElement): CanvasComponent[Numeric]", "member" : "nl.amsscala.simplegame.CanvasComponent.copy", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#copy(img:org.scalajs.dom.raw.HTMLImageElement):nl.amsscala.simplegame.CanvasComponent[Numeric]", "kind" : "abstract def"}, {"label" : "img", "tail" : ": HTMLImageElement", "member" : "nl.amsscala.simplegame.CanvasComponent.img", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#img:org.scalajs.dom.raw.HTMLImageElement", "kind" : "abstract val"}, {"label" : "pos", "tail" : ": Position[Numeric]", "member" : "nl.amsscala.simplegame.CanvasComponent.pos", "link" : "nl\/amsscala\/simplegame\/CanvasComponent.html#pos:nl.amsscala.simplegame.Position[Numeric]", "kind" : "abstract val"}], "shortDescription" : "Umbrella for Page, Hero and Monster Abstract Data Types.", "trait" : "nl\/amsscala\/simplegame\/CanvasComponent.html", "kind" : "trait"}, {"name" : "nl.amsscala.simplegame.Game", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/Game.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/Game.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Game) ⇒ Boolean, msg: ⇒ Any): Game", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Game.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Game) ⇒ Boolean): Game", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Game.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Game", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Game.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Game", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Game.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Game, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/Game.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Game, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/Game.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "play", "tail" : "(canvas: Canvas, headless: Boolean): Unit", "member" : "nl.amsscala.simplegame.Game.play", "link" : "nl\/amsscala\/simplegame\/Game.html#play(canvas:org.scalajs.dom.html.Canvas,headless:Boolean):Unit", "kind" : "def"}, {"label" : "executionContext", "tail" : "(): ExecutionContextExecutor", "member" : "nl.amsscala.simplegame.Game.executionContext", "link" : "nl\/amsscala\/simplegame\/Game.html#executionContext:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Game.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Game.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Game.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Game.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Game.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Game.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Game.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Game.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Game.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Game.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Game.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Game.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/amsscala\/simplegame\/Game.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Game.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/amsscala\/simplegame\/Game.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Game.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Game.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Game.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Game.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "This game with its comprehensible rules.", "trait" : "nl\/amsscala\/simplegame\/Game.html", "kind" : "trait"}, {"name" : "nl.amsscala.simplegame.GameState", "shortDescription" : "Container holding the Game's state.", "object" : "nl\/amsscala\/simplegame\/GameState$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/GameState.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/GameState.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GameState[T]) ⇒ Boolean, msg: ⇒ Any): GameState[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/GameState.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GameState[T]) ⇒ Boolean): GameState[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/GameState.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GameState[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/GameState.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GameState[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/GameState.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GameState[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/GameState.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GameState[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/GameState.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "nl.amsscala.simplegame.GameState.toString", "link" : "nl\/amsscala\/simplegame\/GameState.html#toString():String", "kind" : "def"}, {"label" : "keyEffect", "tail" : "(latency: Double, keysDown: Set[Int]): GameState[T]", "member" : "nl.amsscala.simplegame.GameState.keyEffect", "link" : "nl\/amsscala\/simplegame\/GameState.html#keyEffect(latency:Double,keysDown:scala.collection.mutable.Set[Int]):nl.amsscala.simplegame.GameState[T]", "kind" : "def"}, {"label" : "hero", "tail" : "(): Hero[T]", "member" : "nl.amsscala.simplegame.GameState.hero", "link" : "nl\/amsscala\/simplegame\/GameState.html#hero:nl.amsscala.simplegame.Hero[T]", "kind" : "def"}, {"label" : "gameOverTxt", "tail" : "(): String", "member" : "nl.amsscala.simplegame.GameState.gameOverTxt", "link" : "nl\/amsscala\/simplegame\/GameState.html#gameOverTxt:String", "kind" : "def"}, {"label" : "explainTxt", "tail" : "(): String", "member" : "nl.amsscala.simplegame.GameState.explainTxt", "link" : "nl\/amsscala\/simplegame\/GameState.html#explainTxt:String", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "nl.amsscala.simplegame.GameState.equals", "link" : "nl\/amsscala\/simplegame\/GameState.html#equals(that:Any):Boolean", "kind" : "def"}, {"member" : "nl.amsscala.simplegame.GameState#<init>", "error" : "unsupported entity"}, {"label" : "monstersHitTxt", "tail" : ": String", "member" : "nl.amsscala.simplegame.GameState.monstersHitTxt", "link" : "nl\/amsscala\/simplegame\/GameState.html#monstersHitTxt:String", "kind" : "val"}, {"label" : "isGameOver", "tail" : ": Boolean", "member" : "nl.amsscala.simplegame.GameState.isGameOver", "link" : "nl\/amsscala\/simplegame\/GameState.html#isGameOver:Boolean", "kind" : "val"}, {"label" : "isNewGame", "tail" : ": Boolean", "member" : "nl.amsscala.simplegame.GameState.isNewGame", "link" : "nl\/amsscala\/simplegame\/GameState.html#isNewGame:Boolean", "kind" : "val"}, {"label" : "pageElements", "tail" : ": Vector[CanvasComponent[T]]", "member" : "nl.amsscala.simplegame.GameState.pageElements", "link" : "nl\/amsscala\/simplegame\/GameState.html#pageElements:Vector[nl.amsscala.simplegame.CanvasComponent[T]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/GameState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/GameState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/GameState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/GameState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/GameState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/GameState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/GameState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/GameState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/GameState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/GameState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/GameState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/GameState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/GameState.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/GameState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/GameState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/GameState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/GameState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "monsterText", "tail" : "(score: Int): String", "member" : "nl.amsscala.simplegame.GameState.monsterText", "link" : "nl\/amsscala\/simplegame\/GameState$.html#monsterText(score:Int):String", "kind" : "def"}, {"label" : "gameOverTxt", "tail" : "(): String", "member" : "nl.amsscala.simplegame.GameState.gameOverTxt", "link" : "nl\/amsscala\/simplegame\/GameState$.html#gameOverTxt:String", "kind" : "def"}, {"label" : "explainTxt", "tail" : "(): String", "member" : "nl.amsscala.simplegame.GameState.explainTxt", "link" : "nl\/amsscala\/simplegame\/GameState$.html#explainTxt:String", "kind" : "def"}, {"label" : "apply", "tail" : "(canvas: Canvas, monsterPos: Position[T], heroPos: Position[T])(arg0: Numeric[T]): GameState[T]", "member" : "nl.amsscala.simplegame.GameState.apply", "link" : "nl\/amsscala\/simplegame\/GameState$.html#apply[T](canvas:org.scalajs.dom.html.Canvas,monsterPos:nl.amsscala.simplegame.Position[T],heroPos:nl.amsscala.simplegame.Position[T])(implicitevidence$3:Numeric[T]):nl.amsscala.simplegame.GameState[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(canvas: Canvas)(arg0: Numeric[T]): GameState[T]", "member" : "nl.amsscala.simplegame.GameState.apply", "link" : "nl\/amsscala\/simplegame\/GameState$.html#apply[T](canvas:org.scalajs.dom.html.Canvas)(implicitevidence$2:Numeric[T]):nl.amsscala.simplegame.GameState[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/GameState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/GameState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/GameState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/GameState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/GameState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/GameState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/GameState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/GameState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/GameState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/GameState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/GameState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/GameState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/amsscala\/simplegame\/GameState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/GameState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/amsscala\/simplegame\/GameState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/GameState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/GameState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/GameState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/GameState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/amsscala\/simplegame\/GameState.html", "kind" : "class"}, {"name" : "nl.amsscala.simplegame.Hero", "shortDescription" : "CanvasComponent's implementation for to visual Hero sprite on the canvas.", "object" : "nl\/amsscala\/simplegame\/Hero$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/Hero.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/Hero.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Hero[H]) ⇒ Boolean, msg: ⇒ Any): Hero[H]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Hero.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Hero[H]) ⇒ Boolean): Hero[H]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Hero.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Hero[H]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Hero.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Hero[H]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Hero.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Hero[H], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/Hero.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Hero[H], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/Hero.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "keyEffect", "tail" : "(latency: Double, keysDown: Set[Int]): Hero[H]", "member" : "nl.amsscala.simplegame.Hero.keyEffect", "link" : "nl\/amsscala\/simplegame\/Hero.html#keyEffect(latency:Double,keysDown:scala.collection.mutable.Set[Int]):nl.amsscala.simplegame.Hero[H]", "kind" : "def"}, {"label" : "src", "tail" : "(): String", "member" : "nl.amsscala.simplegame.Hero.src", "link" : "nl\/amsscala\/simplegame\/Hero.html#src:String", "kind" : "def"}, {"label" : "isValidPosition", "tail" : "(canvas: Canvas): Boolean", "member" : "nl.amsscala.simplegame.Hero.isValidPosition", "link" : "nl\/amsscala\/simplegame\/Hero.html#isValidPosition(canvas:org.scalajs.dom.html.Canvas):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(pos: Position[H]): Hero[H]", "member" : "nl.amsscala.simplegame.Hero.copy", "link" : "nl\/amsscala\/simplegame\/Hero.html#copy(pos:nl.amsscala.simplegame.Position[H]):nl.amsscala.simplegame.Hero[H]", "kind" : "def"}, {"label" : "copy", "tail" : "(canvas: Canvas): Hero[H]", "member" : "nl.amsscala.simplegame.Hero.copy", "link" : "nl\/amsscala\/simplegame\/Hero.html#copy(canvas:org.scalajs.dom.html.Canvas):nl.amsscala.simplegame.Hero[H]", "kind" : "def"}, {"label" : "copy", "tail" : "(img: HTMLImageElement): Hero[H]", "member" : "nl.amsscala.simplegame.Hero.copy", "link" : "nl\/amsscala\/simplegame\/Hero.html#copy(img:org.scalajs.dom.raw.HTMLImageElement):nl.amsscala.simplegame.Hero[H]", "kind" : "def"}, {"member" : "nl.amsscala.simplegame.Hero#<init>", "error" : "unsupported entity"}, {"label" : "img", "tail" : ": HTMLImageElement", "member" : "nl.amsscala.simplegame.Hero.img", "link" : "nl\/amsscala\/simplegame\/Hero.html#img:org.scalajs.dom.raw.HTMLImageElement", "kind" : "val"}, {"label" : "pos", "tail" : ": Position[H]", "member" : "nl.amsscala.simplegame.Hero.pos", "link" : "nl\/amsscala\/simplegame\/Hero.html#pos:nl.amsscala.simplegame.Position[H]", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "nl.amsscala.simplegame.CanvasComponent.equals", "link" : "nl\/amsscala\/simplegame\/Hero.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "nl.amsscala.simplegame.CanvasComponent.toString", "link" : "nl\/amsscala\/simplegame\/Hero.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Hero.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Hero.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Hero.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Hero.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Hero.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Hero.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Hero.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Hero.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Hero.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Hero.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Hero.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Hero.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Hero.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Hero.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Hero.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Hero.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Hero.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(pos: Position[H])(arg0: Numeric[H]): Hero[H]", "member" : "nl.amsscala.simplegame.Hero.apply", "link" : "nl\/amsscala\/simplegame\/Hero$.html#apply[H](pos:nl.amsscala.simplegame.Position[H])(implicitevidence$6:Numeric[H]):nl.amsscala.simplegame.Hero[H]", "kind" : "def"}, {"label" : "apply", "tail" : "(canvas: Canvas)(arg0: Numeric[H]): Hero[H]", "member" : "nl.amsscala.simplegame.Hero.apply", "link" : "nl\/amsscala\/simplegame\/Hero$.html#apply[H](canvas:org.scalajs.dom.html.Canvas)(implicitevidence$5:Numeric[H]):nl.amsscala.simplegame.Hero[H]", "kind" : "def"}, {"label" : "speed", "tail" : ": Int", "member" : "nl.amsscala.simplegame.Hero.speed", "link" : "nl\/amsscala\/simplegame\/Hero$.html#speed:Int", "kind" : "val"}, {"label" : "pxSize", "tail" : ": Int", "member" : "nl.amsscala.simplegame.Hero.pxSize", "link" : "nl\/amsscala\/simplegame\/Hero$.html#pxSize:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Hero$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Hero$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Hero$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Hero$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Hero$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Hero$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Hero$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Hero$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Hero$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Hero$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Hero$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Hero$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/amsscala\/simplegame\/Hero$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Hero$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/amsscala\/simplegame\/Hero$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Hero$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Hero$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Hero$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Hero$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/amsscala\/simplegame\/Hero.html", "kind" : "class"}, {"name" : "nl.amsscala.simplegame.Monster", "shortDescription" : "CanvasComponent's implementation for to visual Monster sprite on the canvas.", "object" : "nl\/amsscala\/simplegame\/Monster$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/Monster.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/Monster.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Monster[M]) ⇒ Boolean, msg: ⇒ Any): Monster[M]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Monster.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Monster[M]) ⇒ Boolean): Monster[M]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Monster.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Monster[M]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Monster.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Monster[M]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Monster.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Monster[M], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/Monster.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Monster[M], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/Monster.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "src", "tail" : "(): String", "member" : "nl.amsscala.simplegame.Monster.src", "link" : "nl\/amsscala\/simplegame\/Monster.html#src:String", "kind" : "def"}, {"label" : "copy", "tail" : "(image: HTMLImageElement): Monster[M]", "member" : "nl.amsscala.simplegame.Monster.copy", "link" : "nl\/amsscala\/simplegame\/Monster.html#copy(image:org.scalajs.dom.raw.HTMLImageElement):nl.amsscala.simplegame.Monster[M]", "kind" : "def"}, {"label" : "copy", "tail" : "(canvas: Canvas)(arg0: Numeric[D]): Monster[D]", "member" : "nl.amsscala.simplegame.Monster.copy", "link" : "nl\/amsscala\/simplegame\/Monster.html#copy[D](canvas:org.scalajs.dom.html.Canvas)(implicitevidence$1:Numeric[D]):nl.amsscala.simplegame.Monster[D]", "kind" : "def"}, {"member" : "nl.amsscala.simplegame.Monster#<init>", "error" : "unsupported entity"}, {"label" : "img", "tail" : ": HTMLImageElement", "member" : "nl.amsscala.simplegame.Monster.img", "link" : "nl\/amsscala\/simplegame\/Monster.html#img:org.scalajs.dom.raw.HTMLImageElement", "kind" : "val"}, {"label" : "pos", "tail" : ": Position[M]", "member" : "nl.amsscala.simplegame.Monster.pos", "link" : "nl\/amsscala\/simplegame\/Monster.html#pos:nl.amsscala.simplegame.Position[M]", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "nl.amsscala.simplegame.CanvasComponent.equals", "link" : "nl\/amsscala\/simplegame\/Monster.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "nl.amsscala.simplegame.CanvasComponent.toString", "link" : "nl\/amsscala\/simplegame\/Monster.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Monster.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Monster.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Monster.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Monster.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Monster.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Monster.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Monster.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Monster.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Monster.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Monster.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Monster.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Monster.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Monster.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Monster.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Monster.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Monster.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Monster.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(canvas: Canvas, randPos: Position[M])(arg0: Numeric[M]): Monster[M]", "member" : "nl.amsscala.simplegame.Monster.apply", "link" : "nl\/amsscala\/simplegame\/Monster$.html#apply[M](canvas:org.scalajs.dom.html.Canvas,randPos:nl.amsscala.simplegame.Position[M])(implicitevidence$2:Numeric[M]):nl.amsscala.simplegame.Monster[M]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Monster$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Monster$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Monster$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Monster$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Monster$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Monster$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Monster$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Monster$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Monster$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Monster$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Monster$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Monster$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/amsscala\/simplegame\/Monster$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Monster$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/amsscala\/simplegame\/Monster$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Monster$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Monster$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Monster$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Monster$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/amsscala\/simplegame\/Monster.html", "kind" : "class"}, {"name" : "nl.amsscala.simplegame.Page", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/Page.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/Page.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Page) ⇒ Boolean, msg: ⇒ Any): Page", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Page.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Page) ⇒ Boolean): Page", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Page.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Page", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Page.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Page", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Page.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Page, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/Page.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Page, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/Page.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "resetCanvasWH", "tail" : "(cnvs: Canvas, pos: Position[P])(arg0: Numeric[P]): Unit", "member" : "nl.amsscala.simplegame.Page.resetCanvasWH", "link" : "nl\/amsscala\/simplegame\/Page.html#resetCanvasWH[P](cnvs:org.scalajs.dom.html.Canvas,pos:nl.amsscala.simplegame.Position[P])(implicitevidence$1:Numeric[P]):Unit", "kind" : "def"}, {"label" : "imageFuture", "tail" : "(src: String): Future[HTMLImageElement]", "member" : "nl.amsscala.simplegame.Page.imageFuture", "link" : "nl\/amsscala\/simplegame\/Page.html#imageFuture(src:String):scala.concurrent.Future[org.scalajs.dom.raw.HTMLImageElement]", "kind" : "def"}, {"label" : "canvasDim", "tail" : "(cnvs: Canvas): Position[D]", "member" : "nl.amsscala.simplegame.Page.canvasDim", "link" : "nl\/amsscala\/simplegame\/Page.html#canvasDim[D](cnvs:org.scalajs.dom.html.Canvas):nl.amsscala.simplegame.Position[D]", "kind" : "def"}, {"label" : "center", "tail" : "(cnvs: Canvas): Position[Int]", "member" : "nl.amsscala.simplegame.Page.center", "link" : "nl\/amsscala\/simplegame\/Page.html#center(cnvs:org.scalajs.dom.html.Canvas):nl.amsscala.simplegame.Position[Int]", "kind" : "def"}, {"label" : "render", "tail" : "(gs: GameState[T]): GameState[T]", "member" : "nl.amsscala.simplegame.Page.render", "link" : "nl\/amsscala\/simplegame\/Page.html#render[T](gs:nl.amsscala.simplegame.GameState[T]):nl.amsscala.simplegame.GameState[T]", "kind" : "def"}, {"label" : "canvas", "tail" : ": Canvas", "member" : "nl.amsscala.simplegame.Page.canvas", "link" : "nl\/amsscala\/simplegame\/Page.html#canvas:org.scalajs.dom.html.Canvas", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Page.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Page.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Page.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Page.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Page.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Page.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Page.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Page.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Page.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Page.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Page.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Page.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/amsscala\/simplegame\/Page.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Page.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/amsscala\/simplegame\/Page.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Page.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Page.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Page.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Page.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Everything related to Html5 visuals as put on a HTML page.", "trait" : "nl\/amsscala\/simplegame\/Page.html", "kind" : "trait"}, {"name" : "nl.amsscala.simplegame.Playground", "shortDescription" : "CanvasComponent's implementation for to visual back ground on the canvas.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "nl\/amsscala\/simplegame\/Playground.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/Playground.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Playground[G]) ⇒ Boolean, msg: ⇒ Any): Playground[G]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Playground.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Playground[G]) ⇒ Boolean): Playground[G]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Playground.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Playground[G]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Playground.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Playground[G]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/Playground.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Playground[G], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/Playground.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Playground[G], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/Playground.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "src", "tail" : "(): String", "member" : "nl.amsscala.simplegame.Playground.src", "link" : "nl\/amsscala\/simplegame\/Playground.html#src:String", "kind" : "def"}, {"label" : "copy", "tail" : "(img: HTMLImageElement): Playground[G]", "member" : "nl.amsscala.simplegame.Playground.copy", "link" : "nl\/amsscala\/simplegame\/Playground.html#copy(img:org.scalajs.dom.raw.HTMLImageElement):nl.amsscala.simplegame.Playground[G]", "kind" : "def"}, {"member" : "nl.amsscala.simplegame.Playground#<init>", "error" : "unsupported entity"}, {"label" : "img", "tail" : ": HTMLImageElement", "member" : "nl.amsscala.simplegame.Playground.img", "link" : "nl\/amsscala\/simplegame\/Playground.html#img:org.scalajs.dom.raw.HTMLImageElement", "kind" : "val"}, {"label" : "pos", "tail" : ": Position[G]", "member" : "nl.amsscala.simplegame.Playground.pos", "link" : "nl\/amsscala\/simplegame\/Playground.html#pos:nl.amsscala.simplegame.Position[G]", "kind" : "val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "nl.amsscala.simplegame.CanvasComponent.equals", "link" : "nl\/amsscala\/simplegame\/Playground.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "nl.amsscala.simplegame.CanvasComponent.toString", "link" : "nl\/amsscala\/simplegame\/Playground.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/Playground.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/Playground.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/Playground.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/Playground.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/Playground.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/Playground.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/Playground.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Playground.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Playground.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/Playground.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/Playground.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/Playground.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/Playground.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/Playground.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/Playground.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/Playground.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/Playground.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/amsscala\/simplegame\/Playground.html", "kind" : "class"}, {"name" : "nl.amsscala.simplegame.Position", "shortDescription" : "Generic base class Position, holding the two ordinates", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Position[P]) ⇒ Boolean, msg: ⇒ Any): Position[P]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Position[P]) ⇒ Boolean): Position[P]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Position[P]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Position[P]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Position[P], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Position[P], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "areTouching", "tail" : "(posB: Position[P], side: P): Boolean", "member" : "nl.amsscala.simplegame.Position.areTouching", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#areTouching(posB:nl.amsscala.simplegame.package.Position[P],side:P):Boolean", "kind" : "def"}, {"label" : "isValidPositionEl", "tail" : "(canvasPos: Position[P], side: P): Boolean", "member" : "nl.amsscala.simplegame.Position.isValidPositionEl", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#isValidPositionEl(canvasPos:nl.amsscala.simplegame.package.Position[P],side:P):Boolean", "kind" : "def"}, {"label" : "*", "tail" : "(factor: P): Position[P]", "member" : "nl.amsscala.simplegame.Position.*", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#*(factor:P):nl.amsscala.simplegame.package.Position[P]", "kind" : "def"}, {"label" : "*", "tail" : "(p: Position[P]): Position[P]", "member" : "nl.amsscala.simplegame.Position.*", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#*(p:nl.amsscala.simplegame.package.Position[P]):nl.amsscala.simplegame.package.Position[P]", "kind" : "def"}, {"label" : "-", "tail" : "(term: P): Position[P]", "member" : "nl.amsscala.simplegame.Position.-", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#-(term:P):nl.amsscala.simplegame.package.Position[P]", "kind" : "def"}, {"label" : "-", "tail" : "(p: Position[P]): Position[P]", "member" : "nl.amsscala.simplegame.Position.-", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#-(p:nl.amsscala.simplegame.package.Position[P]):nl.amsscala.simplegame.package.Position[P]", "kind" : "def"}, {"label" : "+", "tail" : "(term: P): Position[P]", "member" : "nl.amsscala.simplegame.Position.+", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#+(term:P):nl.amsscala.simplegame.package.Position[P]", "kind" : "def"}, {"label" : "+", "tail" : "(p: Position[P]): Position[P]", "member" : "nl.amsscala.simplegame.Position.+", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#+(p:nl.amsscala.simplegame.package.Position[P]):nl.amsscala.simplegame.package.Position[P]", "kind" : "def"}, {"member" : "nl.amsscala.simplegame.Position#<init>", "error" : "unsupported entity"}, {"label" : "y", "tail" : ": P", "member" : "nl.amsscala.simplegame.Position.y", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#y:P", "kind" : "val"}, {"label" : "x", "tail" : ": P", "member" : "nl.amsscala.simplegame.Position.x", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#x:P", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/package$$Position.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/package$$Position.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "nl\/amsscala\/simplegame\/package$$Position.html", "kind" : "case class"}, {"name" : "nl.amsscala.simplegame.SimpleCanvasGame", "shortDescription" : "Main entry point for application start", "object" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html", "members_object" : [{"label" : "main", "tail" : "(): Unit", "member" : "nl.amsscala.simplegame.SimpleCanvasGame.main", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#main():Unit", "kind" : "def"}, {"label" : "T", "tail" : "", "member" : "nl.amsscala.simplegame.SimpleCanvasGame.T", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#T=Long", "kind" : "type"}, {"label" : "resetCanvasWH", "tail" : "(cnvs: Canvas, pos: Position[P])(arg0: Numeric[P]): Unit", "member" : "nl.amsscala.simplegame.Page.resetCanvasWH", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#resetCanvasWH[P](cnvs:org.scalajs.dom.html.Canvas,pos:nl.amsscala.simplegame.Position[P])(implicitevidence$1:Numeric[P]):Unit", "kind" : "def"}, {"label" : "imageFuture", "tail" : "(src: String): Future[HTMLImageElement]", "member" : "nl.amsscala.simplegame.Page.imageFuture", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#imageFuture(src:String):scala.concurrent.Future[org.scalajs.dom.raw.HTMLImageElement]", "kind" : "def"}, {"label" : "canvasDim", "tail" : "(cnvs: Canvas): Position[D]", "member" : "nl.amsscala.simplegame.Page.canvasDim", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#canvasDim[D](cnvs:org.scalajs.dom.html.Canvas):nl.amsscala.simplegame.Position[D]", "kind" : "def"}, {"label" : "center", "tail" : "(cnvs: Canvas): Position[Int]", "member" : "nl.amsscala.simplegame.Page.center", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#center(cnvs:org.scalajs.dom.html.Canvas):nl.amsscala.simplegame.Position[Int]", "kind" : "def"}, {"label" : "render", "tail" : "(gs: GameState[T]): GameState[T]", "member" : "nl.amsscala.simplegame.Page.render", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#render[T](gs:nl.amsscala.simplegame.GameState[T]):nl.amsscala.simplegame.GameState[T]", "kind" : "def"}, {"label" : "canvas", "tail" : ": Canvas", "member" : "nl.amsscala.simplegame.Page.canvas", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#canvas:org.scalajs.dom.html.Canvas", "kind" : "val"}, {"label" : "play", "tail" : "(canvas: Canvas, headless: Boolean): Unit", "member" : "nl.amsscala.simplegame.Game.play", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#play(canvas:org.scalajs.dom.html.Canvas,headless:Boolean):Unit", "kind" : "def"}, {"label" : "executionContext", "tail" : "(): ExecutionContextExecutor", "member" : "nl.amsscala.simplegame.Game.executionContext", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#executionContext:scala.concurrent.ExecutionContextExecutor", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/amsscala\/simplegame\/SimpleCanvasGame$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};